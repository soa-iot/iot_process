公司本项目gitlab地址：

#####################################################################################################
http请求
#####################################################################################################
<<<<<<< HEAD
1、获取所有的流程定义对象：
	$.ajax({
	     type: "GET"
	     ,url: '/iot_process/process/processdefinitions' 
	     ,data: {}
	     ,contentType: "application/x-www-form-urlencoded"
	     ,dataType: "json"
	     ,success: function(jsonData){
	     	//后端返回值： ResultJson<List<ProcessDefinition>>
	     },
	     ,error:function(){}		       
	});
	
2、获取所有的流程定义对象id：
	$.ajax({
	     type: "GET"
	     ,url: '/iot_process/process/processdefinitions/dfids' 
	     ,data: {}
	     ,contentType: "application/x-www-form-urlencoded"
	     ,dataType: "json"
	     ,success: function(jsonData){
	     	//后端返回值： ResultJson<List<String>>
	     },
	     ,error:function(){}		       
	});
	
3、根据用户名，获取该用户的所有待办任务
	$.ajax({
	     type: "GET"
	     ,url: '/iot_process/process/tasks' 
	     ,data: {"userName" : ""}
	     ,contentType: "application/x-www-form-urlencoded"
	     ,dataType: "json"
	     ,success: function(jsonData){
	     	//后端返回值： ResultJson<List<TodoTask>>
	     },
	     ,error:function(){}		       
	});

4、根据用户名，获取该用户的所有待办任务(layui表格专用)
	$.ajax({
	     type: "GET"
	     ,url: '/iot_process/process/tasks/layui' 
	     ,data: {}
	     ,contentType: "application/x-www-form-urlencoded"
	     ,dataType: "json"
	     ,success: function(jsonData){
	     	//后端返回值： ResultJson<List<Task>>
	     },
	     ,error:function(){}		       
	});
	
5、流程上报：
	$.ajax({
	     type: "POST"
	     ,url: '/iot_process/process/{dfid}'    //dfid为流程定义id
	     ,data: {key…… ： value……}   //问题上报表单的内容
	     ,contentType: "application/x-www-form-urlencoded"
	     ,dataType: "json"
	     ,success: function(jsonData){
	     	//后端返回值： ResultJson<List<Task>>
	     },
	     ,error:function(){}		       
	});

6、部署流程
	$.ajax({
	     type: "POST"
	     ,url: '/iot_process/process/deployment'    //dfid为流程定义id
	     ,data: {
			"name": "",
	     	"xmlUrl": "",
	     	"pngUrl": ""
		 }   //问题上报表单的内容
	     ,contentType: "application/x-www-form-urlencoded"
	     ,dataType: "json"
	     ,success: function(jsonData){
	     	//后端返回值： ResultJson<List<Task>>
	     },
	     ,error:function(){}		       
	});


7、部署流程(测试专用)
	$.ajax({
	     type: "GET"
	     ,url: '/iot_process/process/deployment'    //dfid为流程定义id
	     ,data: {
	     	"name": "",
	     	"xmlUrl": "",
	     	"pngUrl": ""
	     }   //问题上报表单的内容
	     ,contentType: "application/x-www-form-urlencoded"
	     ,dataType: "json"
	     ,success: function(jsonData){
	     	//后端返回值： ResultJson<List<Task>>
	     },
	     ,error:function(){}		       
	});
	
8、
=======
1、生产报表：
 	1.1  动态生成表格表头
		/productionReport/purificationScheme/tableHead
	1.2  请求表格数据url：
		/productionReport/purificationScheme/tableData
		
>>>>>>> branch 'master' of https://github.com/soa-iot/iot_process.git
		



#####################################################################################################
数据库(oracle)
#####################################################################################################

1、流程配置表：
	1.1   流程变量的配置表
		CREATE TABLE IOT_PROCESS_VARS_CONFIG(
			VCID CHAR(36 BYTE) DEFAULT SYS_GUID() PRIMARY KEY ,
			VARNAME VARCHAR2(68 CHAR)  NOT NULL UNIQUE ,
			VARVALUE VARCHAR2(68 CHAR) DEFAULT '' NOT NULL ,
			NAMETYPE NUMBER(3) DEFAULT 0 NOT NULL ,
			VALUETYPE NUMBER(3) DEFAULT 0 NOT NULL ,
			NOTE VARCHAR2(48 CHAR) DEFAULT '' NOT NULL ,
			REMARK1 VARCHAR2(18 CHAR) DEFAULT '' NOT NULL ,
			REMARK2 VARCHAR2(38 CHAR) DEFAULT '' NOT NULL 
		)
3 流程业务表
	3.1  检维修问题表
		create table PROCESS_INSPECTION_PROBLEM
		(
			CURRENT_PROCESS_PRID VARCHAR(16) NOT NULL UNIQUE DEFAULT '' ,     //对应流程表实例ID
			CURRENT_PROCESS_TSID VARCHAR(16) NOT NULL UNIQUE DEFAULT '' ,     //对应流程表任务ID
			PIID CHAR(36) PRIMARY KEY,                     //流程实例ID
  			REPORTER VARCHAR(10) NOT NULL DEFAULT ''  ,    //上报人
  			REPORTTIME TIMESTAMP  NOT NULL DEFAULT CURRENT_TIMESTAMP, //上报时间
		 	AREA VARCHAR(16) DEFAULT ''  ,                 //问题区域
		  	POSITIONUNIT VARCHAR(16) DEFAULT ''  ,         //属地单位
		  	PROFESSION  VARCHAR(16) DEFAULT ''  ,          //所属专业
		  	PROBLEMTYPE  VARCHAR(16) DEFAULT ''  ,         //问题类型
		  	DEPARTMENT  VARCHAR(16) DEFAULT ''  ,          //问题部门
		  	PROBLEMCLASS VARCHAR(16) DEFAULT '机电仪流程'  ,         //问题类别 (机电仪流程、)
		  	PROBLEMPOSITION VARCHAR(16) DEFAULT ''  ,      //问题定位
		  	UNSAFETYACTION  VARCHAR(28) DEFAULT ''  ,      //不安全行为
		  	UNSAFETYSTATE  VARCHAR(16) DEFAULT ''  ,       //不安全状态
		  	DETAILACTION  VARCHAR(28) DEFAULT ''  ,        //具体行为
		  	PROBLEMDESCRIBE VARCHAR(226) DEFAULT ''  ,            //问题描述
		  	MEASURES VARCHAR(226) DEFAULT ''  ,            //问题处理措施
		  	PREVENTMEASURES  VARCHAR(226) DEFAULT ''  ,    //预防措施
		  	PLANFINISHEDDATE  DATE ,      //计划完成时间
		  	ACTUALFINISHEDDATE  DATE ,    //实际完成时间
		  	ISACCIDENTEVENT CHAR(1) DEFAULT '否'  ,        //是否为事故事件
		  	ISHIDDENEVENT CHAR(1) DEFAULT '否',            //是否为隐患事件
		  	PROBLEMSTATE VARCHAR(8) DEFAULT '未完成'  ,    //问题状态
		  	CURRENTPROGRESS  VARCHAR(16) DEFAULT '问题上报'  ,   //当前进度
		  	RESPONSERS VARCHAR(8) DEFAULT ''  ,                  //负责人
		  	EMERGENCE VARCHAR(8) DEFAULT ''   ,             //紧急程度
		  	RFID  VARCHAR(28) DEFAULT ''   ,             //唯一标示rfid
		  	EQUIPMENTPOSITIONNUM  VARCHAR(28) DEFAULT ''   ,//rfid对应设备位号
		  	REMARK1 VARCHAR(28) DEFAULT ''   ,              //备注1
		  	REMARK2 VARCHAR(18) DEFAULT ''   ,              //备注2
		  	REMARK3 VARCHAR(8) DEFAULT ''   ,               //备注3
		  	REMARK4 VARCHAR(6) DEFAULT ''   ,               //备注4
		  	REMARK5 CHAR(2) DEFAULT ''                      //备注5
		)
		create unique index INSPECTION_PROBLEM_UNINDEX ON PROCESS_INSPECTION_PROBLEM(PIID)
		
	3.2  事故事件表
		create table PROCESS_INSPECTION_ACCIDENT
		(
			ACC_ID CHAR(36) PRIMARY KEY,
		)
	
<<<<<<< HEAD
	
2、流程变量配置表：
	CREATE TABLE IOT_PROCESS_VARS_CONFIG(
		VCID CHAR(36) PRIMARY KEY,
		VARNAME VARCHAR2(48 CHAR) UNIQUE NOT NULL ,
		VARVALUE VARCHAR2(48 CHAR) DEFAULT ' ' NOT NULL  ,
		NAMETYPE NUMBER(3,0) DEFAULT 0 NOT NULL  ,
		VALUETYPE NUMBER(3,0) DEFAULT 0 NOT NULL  ,
		NOTE VARCHAR2(48 CHAR) DEFAULT ' ' NOT NULL  ,
		REMARK1 VARCHAR2(48 CHAR) DEFAULT ' ' NOT NULL ,
		REMARK2 VARCHAR2(48 CHAR) DEFAULT ' ' NOT NULL 
	);
	comment on table  "IOT_PROCESS_VARS_CONFIG"                is '流程变量初始化表';
	comment on column "IOT_PROCESS_VARS_CONFIG"."VCID"         is '主键';
	comment on column "IOT_PROCESS_VARS_CONFIG"."VARNAME"         is '变量名称';
	comment on column "IOT_PROCESS_VARS_CONFIG"."VARVALUE"         is '初始化变量值';
	comment on column "IOT_PROCESS_VARS_CONFIG"."NAMETYPE"         is '名称类型';
	comment on column "IOT_PROCESS_VARS_CONFIG"."VALUETYPE"        is '值类型';
	comment on column "IOT_PROCESS_VARS_CONFIG"."NOTE"         		is '描述';
	comment on column "IOT_PROCESS_VARS_CONFIG"."REMARK1"         is '备用字段1';
	comment on column "IOT_PROCESS_VARS_CONFIG"."REMARK2"         is '备用字段2';

3、






#####################################################################################################
	数据库脚本(oracle)
#####################################################################################################
1、 activiti删除所有流程表的垃圾数据
	delete from ACT_EVT_LOG;
	delete from ACT_GE_BYTEARRAY;
	
	delete from ACT_HI_ACTINST;
	delete from ACT_HI_ATTACHMENT;
	delete from ACT_HI_COMMENT;
	delete from ACT_HI_DETAIL;
	delete from ACT_HI_IDENTITYLINK;
	delete from ACT_HI_PROCINST;
	delete from ACT_HI_TASKINST;
	delete from ACT_HI_VARINST;
	
	delete from ACT_ID_GROUP;
	delete from ACT_ID_INFO;
	delete from ACT_ID_MEMBERSHIP;
	delete from ACT_ID_USER;
	
	delete from ACT_PROCDEF_INFO;
	
	delete from ACT_RE_DEPLOYMENT;
	delete from ACT_RE_MODEL;
	delete from ACT_RE_PROCDEF;
	
	delete from ACT_RU_EVENT_SUBSCR;
	delete from ACT_RU_EXECUTION;
	delete from ACT_RU_IDENTITYLINK;
	delete from ACT_RU_JOB;
	delete from ACT_RU_TASK;
	delete from ACT_RU_VARIABLE;

	
	
2、
=======
	3.3  隐患时间表
		create table PROCESS_INSPECTION_HIDDENDANGER
		(
			HID_ID CHAR(36) PRIMARY KEY,
		)
		
>>>>>>> branch 'master' of https://github.com/soa-iot/iot_process.git
