公司本项目gitlab地址： http://192.168.18.21/zhugang/InternetOfThings.git

#####################################################################################################
http访问链接
#####################################################################################################
1、生产报表：
 	1.1  动态生成表格表头
		/productionReport/purificationScheme/tableHead
	1.2  请求表格数据url：
		/productionReport/purificationScheme/tableData
		
		
2、登录：
	2.1   登录
		process/employee/{userPassword} - get
		
		
3、 主页：
    3.1  主页地址：
    		/html/process/index.html
    	  问题上报页面：
    	 	/html/process/problemReport.html
    	   问题历史处理页面：
    	   	/html/process/problemHistoryDeal.html
    3.2  查询代办事项：
    	 	/process/runtimeTask/{userName} - get
    	   查询历史已办事项：
    	   	/process/historyTask/{userName} - get
    	   	
    	   	
4、流程各节点处理：
	4.1     问题评估页面：
			/html/process/problemNodeDeal/problemEstimate.html
		  净化分配页面：
			/html/process/problemNodeDeal/pureAssign.html
		  维修分配页面：
			/html/process/problemNodeDeal/repairAssign.html
		  作业安排页面：
			/html/process/problemNodeDeal/jobArrange.html
		  作业处理页面：
			/html/process/problemNodeDeal/jobDeal.html
		  作业验收页面：
			/html/process/problemNodeDeal/jobCheck.html
		  问题处理页面：
			/html/process/problemNodeDeal/problemDeal.html
	4.2    节点处理api：
		历史当前处理：
			/totalHisCurrNode/processNode/id/name/{piid} - get  -获取历史节点id\name
	
		问题上报：
			processBusiness/problemDealInfo/problemReport - post
		问题评估api：
			processBusiness/problemDealInfo/problemEstimate/{currentTsid}/{nextNodeExecutor} - post    -完成问题评估
			processBusiness/problemDealInfo/problemEstimate/problemReportInfo/{currentPiid} - get    -初始化获取问题上报信息
			processBusiness/problemDealInfo/problemEstimate/problemReportInfo - post    -更新问题上报信息
			problemEstimate/exector/{userName} post   -任务转移执行人
			problemEstimate/exector/{parentId} - get   -获取人员组织关系
			problemEstimate/process/end - put   -终止流程
		净化分配：
			/pureAssign/{piid} - post - 净化分配节点处理
			
		维修分配：
			process/problemDealInfo/repairAssign - post
		作业安排：
			process/problemDealInfo/jobArrange - post
		作业处理：
			process/problemDealInfo/jobDeal - post
		作业检查：
			process/problemDealInfo/jobCheck - post
		问题处理：
			process/problemDealInfo/problemDeal - post
		
		组织结构：
			/processBusiness/executor/problemPA - GET - 净化分配可执行人
			/pureAssign/executor/problemRA - GET - 维修分配可执行人
5 需求描述
	5.1
	5.2
  	5.3 净化分配
  		5.3.1  页面动态展示
  		5.3.2  判断事故事件、隐患事件
  		5.3.3  下一步操作，下一步操作选择维修技干，保存流程处理信息
  		5.3.4  回退操作，如果自己上报则不能回退，其他可回退到问题跟踪节点
  		5.3.5  特送操作，把任务传递给指定执行人
  		5.3.6  闭环流程操作
  		
  		


#####################################################################################################
数据库（mysql）
#####################################################################################################

1、方案和巡检点表：
	1.1   方案配置表
		create table SCHEMEPOSITION (
			ID CHAR(36) primary Key,
			INSPECTIONNAME VARCHAR(30) NOT NULL DEFAULT '' ,
			CHECKPOSITON VARCHAR(20) NOT NULL DEFAULT '' ,
			FIRSTCOLSPAN INT(2) NOT NULL DEFAULT 2,
			PROJECTNAME1 VARCHAR(20) NOT NULL DEFAULT '' ,
			SECONDCOLSPAN1 INT(2) NOT NULL DEFAULT 2,
			PROJECTNAME2 VARCHAR(20) NOT NULL DEFAULT '' ,
			SECONDCOLSPAN2 INT(2) NOT NULL DEFAULT 2,
			POSITIONNUM  VARCHAR(20) NOT NULL DEFAULT '' ,
			UNIT  VARCHAR(10) NOT NULL DEFAULT '' ,
			FOURTHCOLSPAN INT(2) NOT NULL DEFAULT 2,
			DATARANGE  VARCHAR(20) NOT NULL DEFAULT '' ,
			FIVTHCOLSPAN INT(2) NOT NULL DEFAULT 2
		)
	1.2    方案值记录表 
		create sequence sequence_ctiv
			increment by 10
			start with 10;
			
		create table CZ_TASK_INSPECTION_VALUE(
			ivid Integer primary key,	
			plan_id char(36)  not null,
			record_time Date not null ,
			position_num varchar2(16 char) not null,
			remark1 varchar2(6 char) default '' not null,
			remark2 varchar2(16 char) default '' not null
		) partition by range(record_time) interval( numbertodsinterval( 7, 'Day') )
		(
			partition partition_one values less than ( to_date('2018.11.10','YYYY-MM-DD')) 	
		)
		comment on table  "CZ_TASK_INSPECTION_VALUE"                is '电子巡检记录值表';
		comment on column "CZ_TASK_INSPECTION_VALUE"."IVID"         is '主键';
		comment on column "CZ_TASK_INSPECTION_VALUE"."PLAN_ID"      is '方案id';
		comment on column "CZ_TASK_INSPECTION_VALUE"."RECORD_TIME"  is '记录时间';
		comment on column "CZ_TASK_INSPECTION_VALUE"."POSITION_NUM" is '记录点位';
		comment on column "CZ_TASK_INSPECTION_VALUE"."REMARK1"      is '备注1';
		comment on column "CZ_TASK_INSPECTION_VALUE"."REMARK2"      is '备注2';

2、流程人员相关表：
	2.1  人员表：
		create table PROCESS_EMPLOYEE
		(
			EMP_ID CHAR(36) PRIMARY KEY,
			EMP_NAME VARCHAR(10) NOT NULL DEFAULT '',
			EMP_PASSWORD VARCHAR(20) NOT NULL DEFAULT '',
			EMP_TELEPHONE_NUM CHAR(11) NOT NULL DEFAULT '',
			EMP_SEX Bit NOT NULL DEFAULT 1
		)
		
	2.2  组织表
		create table PROCESS_ORGANIZATION
		(
			ORG_ID CHAR(36) PRIMARY KEY,
			ORG_NAME VARCHAR(20) NOT NULL DEFAULT '',
			ORG_PARENTID CHAR(36) NOT NULL DEFAULT ''
		)
		
	2.3  人员组织关系表
		create table PROCESS_EMPLOYEE_ORGANIZATION
		(
			EMP_ORG_ID CHAR(36) PRIMARY KEY,
			EMP_ID CHAR(36) NOT NULL UNIQUE,
			ORG_ID CHAR(36) NOT NULL UNIQUE
		)
		
	2.4  角色表
		create table PROCESS_ROLE
		(
			ROL_ID CHAR(36) PRIMARY KEY,
			ROL_NAME VARCHAR(20) NOT NULL DEFAULT ''
		)
	
	2.5  人员角色关系表
		create table PROCESS_EMPLOYEE_ROLE
			(
				EMP_ROL_ID CHAR(36) PRIMARY KEY,
				EMP_ID CHAR(36) NOT NULL UNIQUE,
				ROL_ID CHAR(36) NOT NULL UNIQUE
			)
		
	2.6 权限表
		create table PROCESS_AUTHORITY
		(
			AUT_ID CHAR(36) PRIMARY KEY,
			AUT_NAME VARCHAR(20) NOT NULL DEFAULT '',
			AUT_URL VARCHAR(200) NOT NULL DEFAULT '',
			AUT_NOTE VARCHAR(20) NOT NULL DEFAULT ''
		)
	
	2.5 角色权限关系表
		create table PROCESS_ROLE_AUTHORITY
		(
			ROL_AUT_ID CHAR(36) PRIMARY KEY,
			ROL_ID CHAR(36) NOT NULL UNIQUE,
			AUT_ID CHAR(36) NOT NULL UNIQUE
		)	
		
	2.6  函数
		DROP FUNCTION IF EXISTS queryChildrenOrgan;
		CREATE FUNCTION queryChildrenOrgan(parentid INT)
		RETURNS VARCHAR(4000)
		BEGIN
		DECLARE sTemp VARCHAR(4000);
		DECLARE sTempChd VARCHAR(4000);
		
		SET sTemp='$';
		SET sTempChd = CAST(parentid AS CHAR);
		
		WHILE sTempChd IS NOT NULL DO
		SET sTemp= CONCAT(sTemp,',',sTempChd);
		SELECT GROUP_CONCAT(ORG_ID) INTO sTempChd FROM process_organization
		WHERE FIND_IN_SET(ORG_PARENTID,sTempChd)>0;
		END WHILE;
		RETURN sTemp;
		END;
					
		SELECT * FROM process_organization 
		WHERE FIND_IN_SET(ORG_PARENTID,queryChildrenOrgan('0'));
		
	2.7 视图
		create view process_tree as 
		SELECT 
			ORG_ID as id,ORG_PARENTID as pid, ORG_NAME as name,
			"true" as open,"false" as isParent
		FROM 
			process_organization WHERE FIND_IN_SET(ORG_PARENTID,queryChildrenOrgan('0')) 
		
3 流程业务表
	3.1  检维修问题表
		create table PROCESS_INSPECTION_PROBLEM
		(
			CURRENT_PROCESS_PRID VARCHAR(16) NOT NULL UNIQUE DEFAULT '' ,     //对应流程表实例ID
			CURRENT_PROCESS_TSID VARCHAR(16) NOT NULL UNIQUE DEFAULT '' ,     //对应流程表任务ID
			PIID CHAR(36) PRIMARY KEY,                     //流程实例ID
  			REPORTER VARCHAR(10) NOT NULL DEFAULT ''  ,    //上报人
  			REPORTTIME TIMESTAMP  NOT NULL DEFAULT CURRENT_TIMESTAMP, //上报时间
		 	AREA VARCHAR(16) DEFAULT ''  ,                 //问题区域
		  	POSITIONUNIT VARCHAR(16) DEFAULT ''  ,         //属地单位
		  	PROFESSION  VARCHAR(16) DEFAULT ''  ,          //所属专业
		  	PROBLEMTYPE  VARCHAR(16) DEFAULT ''  ,         //问题类型
		  	DEPARTMENT  VARCHAR(16) DEFAULT ''  ,          //问题部门
		  	PROBLEMCLASS VARCHAR(16) DEFAULT '机电仪流程'  ,         //问题类别 (机电仪流程、)
		  	PROBLEMPOSITION VARCHAR(16) DEFAULT ''  ,      //问题定位
		  	UNSAFETYACTION  VARCHAR(28) DEFAULT ''  ,      //不安全行为
		  	UNSAFETYSTATE  VARCHAR(16) DEFAULT ''  ,       //不安全状态
		  	DETAILACTION  VARCHAR(28) DEFAULT ''  ,        //具体行为
		  	PROBLEMDESCRIBE VARCHAR(226) DEFAULT ''  ,            //问题描述
		  	MEASURES VARCHAR(226) DEFAULT ''  ,            //问题处理措施
		  	PREVENTMEASURES  VARCHAR(226) DEFAULT ''  ,    //预防措施
		  	PLANFINISHEDDATE  DATE ,      //计划完成时间
		  	ACTUALFINISHEDDATE  DATE ,    //实际完成时间
		  	ISACCIDENTEVENT CHAR(1) DEFAULT '否'  ,        //是否为事故事件
		  	ISHIDDENEVENT CHAR(1) DEFAULT '否',            //是否为隐患事件
		  	PROBLEMSTATE VARCHAR(8) DEFAULT '未完成'  ,    //问题状态
		  	CURRENTPROGRESS  VARCHAR(16) DEFAULT '问题上报'  ,   //当前进度
		  	RESPONSERS VARCHAR(8) DEFAULT ''  ,                  //负责人
		  	EMERGENCE VARCHAR(8) DEFAULT ''   ,             //紧急程度
		  	RFID  VARCHAR(28) DEFAULT ''   ,             //唯一标示rfid
		  	EQUIPMENTPOSITIONNUM  VARCHAR(28) DEFAULT ''   ,//rfid对应设备位号
		  	REMARK1 VARCHAR(28) DEFAULT ''   ,              //备注1
		  	REMARK2 VARCHAR(18) DEFAULT ''   ,              //备注2
		  	REMARK3 VARCHAR(8) DEFAULT ''   ,               //备注3
		  	REMARK4 VARCHAR(6) DEFAULT ''   ,               //备注4
		  	REMARK5 CHAR(2) DEFAULT ''                      //备注5
		)
		create unique index INSPECTION_PROBLEM_UNINDEX ON PROCESS_INSPECTION_PROBLEM(PIID)
		
	3.2  事故事件表
		create table PROCESS_INSPECTION_ACCIDENT
		(
			ACC_ID CHAR(36) PRIMARY KEY,
		)
	
	3.3  隐患时间表
		create table PROCESS_INSPECTION_HIDDENDANGER
		(
			HID_ID CHAR(36) PRIMARY KEY,
		)
		
